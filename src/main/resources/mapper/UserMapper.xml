<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.metoo.monitor.core.mapper.UserMapper">

    <resultMap id="Base_User_Map" type="com.metoo.monitor.core.entity.User">
        <id column="mu_id" property="id"/>
        <result column="mu_addTime" property="addTime"></result>
        <result column="mu_username" property="username"></result>
        <result column="mu_password" property="password"></result>
        <result column="mu_sex" property="sex"></result>
        <result column="mu_age" property="age"></result>
        <!--角色信息-->
        <collection property="rofindUserUpdateles" javaType="list" ofType="com.metoo.monitor.core.entity.Role">
            <id column="mr_id" property="id"/>
            <result column="mr_name" property="name"></result>
            <result column="mr_roleCode" property="roleCode"></result>
            <result column="mr_type" property="type"></result>
        </collection>
    </resultMap>

    <resultMap id="Base_Update_Map" type="com.metoo.monitor.core.vo.UserVo">
        <id column="mu_id" property="id"></id>
        <result column="mu_addTime" property="addTime"></result>
        <result column="mu_username" property="username"></result>
        <result column="mu_password" property="password"></result>
        <result column="mu_age" property="age"></result>
        <result column="mu_sex" property="sex"></result>
        <result column="mu_userRole" property="type"></result>
        <collection property="roleIds" column="mr_id" ofType="java.lang.Long">
            <id column="mr_id" property="roleIds"></id>
        </collection>
    </resultMap>

    <sql id="Base_Column_List">
        id, addTime, deleteStatus, username, password, sex, age, userRole
    </sql>

    <insert id="insert" parameterType="com.metoo.monitor.core.entity.User" keyProperty="id" useGeneratedKeys="true">
        insert into metoo_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="addTime != null">
                addTime,
            </if>
            <if test="username != null and username != ''">
                `username`,
            </if>
            <if test="password != null and password != ''">
                `password`,
            </if>
            <if test="salt != null">
                salt,
            </if>
            <if test="userRole != null">
                userRole,
            </if>
            <if test="age != null">
                age,
            </if>
            <if test="sex != null">
                sex,
            </if>
        </trim>
        <trim prefix="VALUES(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id},
            </if>
            <if test="addTime != null">
                #{addTime},
            </if>
            <if test="username != null and username != ''">
                #{username},
            </if>
            <if test="password != null and password != ''">
                #{password},
            </if>
            <if test="salt != null and salt != ''">
                #{salt},
            </if>
            <if test="userRole != null">
                #{userRole},
            </if>
            <if test="age != null">
                #{age},
            </if>
            <if test="sex != null">
                #{sex},
            </if>
        </trim>
    </insert>

    <select id="findByUserName" parameterType="String" resultType="com.metoo.monitor.core.entity.User">
        SELECT
            id,
            username,
            password,
            salt,
            userRole,
            sex,
            age
        FROM
            metoo_user
        WHERE
        username=#{username}
        AND
        deleteStatus >= 0
    </select>

    <sql id="Unit_Column_List">
       mu.id mu_id,mu.addTime mu_addTime, mu.username mu_username, mu.password mu_password, mu.sex mu_sex,
        mu.age mu_age,mu.userRole mu_userRole,
        mr.id mr_id
    </sql>

    <select id="findRolesByUserName" parameterType="String" resultMap="Base_User_Map">
        SELECT <include refid="Unit_Column_List" />
        FROM metoo_user mu
        LEFT JOIN metoo_user_role mur on mu.id=mur.user_id
        LEFT JOIN metoo_role mr on mr.id=mur.role_id
        WHERE mu.username=#{username}

    </select>

    <select id="query" parameterType="com.metoo.monitor.core.dto.UserDto" resultType="com.metoo.monitor.core.vo.UserVo">
        SELECT <include refid="Base_Column_List"/>
        FROM metoo_user mu
        WHERE
        mu.deleteStatus = 0
        ORDER BY mu.addTime
        DESC
    </select>

    <select id="selectPrimaryKey" resultType="com.metoo.monitor.core.entity.User">
        SELECT <include refid="Base_Column_List" />
        FROM metoo_user mu
        WHERE id=#{id, jdbcType=BIGINT}
    </select>

    <select id="findUserUpdate" parameterType="java.lang.Long" resultMap="Base_Update_Map">
        SELECT <include refid="Unit_Column_List" />
        FROM metoo_user mu
        LEFT JOIN metoo_user_role mur ON mur.user_id = mu.id
        LEFT JOIN metoo_role mr ON mr.id = mur.role_id
        WHERE mu.id=#{id}
    </select>

    <update id="update" parameterType="com.metoo.monitor.core.entity.User">
        UPDATE metoo_user
        <set>
            <if test = "username != null and username != ''">
                username=#{username},
            </if>
            <if test = "password != null and password != ''">
                password=#{password},
            </if>
            <if test = "sex != null">
                sex=#{sex},
            </if>
            <if test = "age != null">
                age=#{age},
            </if>
            <if test = "salt != null">
                salt=#{salt},
            </if>
            <if test="userRole != null">
                userRole=#{userRole},
            </if>
            <if test="deleteStatus != null">
                deleteStatus=#{deleteStatus},
            </if>
        </set>
        <where>
            <if test = "id != null">
                id=#{id}
            </if>
        </where>
    </update>

    <delete id="delete" parameterType="java.lang.Long">
        DELETE FROM metoo_user
        WHERE id=#{id, jdbcType=BIGINT}
    </delete>


</mapper>